plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	implementation 'com.github.markozajc:akiwrapper:1.5.2'
	include 'com.github.markozajc:akiwrapper:1.5.2'
	include 'com.jcabi:jcabi-log:0.20.0'
	include 'com.jcabi:jcabi-xml:0.23.2'
	include 'com.konghq:unirest-java:3.13.8'
	include 'net.bytebuddy:byte-buddy:1.10.13'
	include 'net.bytebuddy:byte-buddy-agent:1.10.13'
	include 'org.apache.httpcomponents:httpasyncclient:4.1.5'
	include 'org.apache.httpcomponents:httpcore-nio:4.4.13'
	include 'org.apache.httpcomponents:httpmime:4.5.13'
	include 'org.cactoos:cactoos:0.50'
	include 'org.json:json:20220320'
	include 'org.mockito:mockito-core:3.4.6'
	include 'org.objenesis:objenesis:2.6'

	implementation 'org.sejda.imageio:webp-imageio:0.1.6'
	include 'org.sejda.imageio:webp-imageio:0.1.6'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}

	from("LICENSE_webp_imageio")
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
